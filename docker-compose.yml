services:
  patient-service:
    image: patient-service:latest
    build:
      context: ./patient-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    networks:
      - internal
    depends_on:
      - billing-service
      - patient-service-db
    environment:
      BILLING_SERVICE_ADDRESS: billing-service
      BILLING_SERVICE_GRPC_PORT: 9002
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_DATASOURCE_URL: jdbc:postgresql://patient-service-db:5432/db
      SPRING_DATASOURCE_USERNAME: admin_user
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_SQL_INIT_MODE: always
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  billing-service:
    image: billing-service:latest
    build:
      context: ./billing-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
      - "9002:9002"
    networks:
      - internal

  analytics-service:
    image: analytics-service:latest
    build:
      context: ./analytics-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - internal
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_KAFKA_PROPERTIES_REQUEST_TIMEOUT_MS: 20000
      SPRING_KAFKA_PROPERTIES_MAX_BLOCK_MS: 15000
      SPRING_KAFKA_LISTENER_MISSING_TOPICS_FATAL: false

  patient-service-db:
    image: postgres:14
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: admin_user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - internal

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9094
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - internal
    depends_on:
      - zookeeper
    healthcheck:
      test: [ "CMD-SHELL", "kafka-topics --bootstrap-server kafka:9092 --list || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - internal
    healthcheck:
        test: [ "CMD-SHELL", "echo ruok | nc localhost 2181 | grep imok" ]
        interval: 10s
        timeout: 5s
        retries: 5

  api-gateway:
    image: api-gateway:latest
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - internal
    depends_on:
      - patient-service

networks:
  internal:
    driver: bridge

volumes:
  postgres_data: